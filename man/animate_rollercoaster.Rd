% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animate_rollercoaster.R
\name{animate_rollercoaster}
\alias{animate_rollercoaster}
\title{Animate Rollercoaster}
\usage{
animate_rollercoaster(
  filename = NA,
  samples = 128,
  sample_method = "sobol_blue",
  fov = NA,
  keep_images = TRUE,
  framerate = 30,
  vfilter = "null",
  codec = NULL,
  audio = NULL,
  ...
)
}
\arguments{
\item{filename}{Default `NA`. No files saved by default, simply plotted to the preview display.
By default, any string will save the individual frames as `png` image files. If
the file extension is `mp4`, the frames will automatically be converted to a movie using the {av}
package.}

\item{samples}{Default `128`. Number of samples}

\item{sample_method}{Default `sobol_blue`. Sample method (see rayrender documentation).}

\item{fov}{Default `NA`. Field of view, overriding the value set in the motion dataframe. Set
this to `360` to get a video that can be converted for virtual reality/headset viewing.}

\item{keep_images}{Default `TRUE`. Whether to keep all the image frames if the output is an mp4 file.}

\item{framerate}{Default `30`. Only used if rendering an mp4 file. Frames per second of the movie.}

\item{vfilter}{Default `"null"`. See documentation for `av::av_encode_video`.}

\item{codec}{Default `NULL`. See documentation for `av::av_encode_video`.}

\item{audio}{Default `NULL`. See documentation for `av::av_encode_video`.}

\item{...}{Additional parameters to pass to `rayrender::render_animation()`.}
}
\value{
None
}
\description{
Animate Rollercoaster
}
\examples{
#Generate a rayrender scene (an R on a checkerboard, with a glass sphere)
\donttest{
library(rayrender)
scene = generate_ground(material=diffuse(checkercolor="grey20")) |>
 add_object(obj_model(r_obj(),y=-1,x=1, material=diffuse(color = "purple"))) |>
 add_object(sphere(y=-0,x=-1,radius=1, material=dielectric())) |>
 add_object(sphere(y=5,x=5,z=5,material=light(intensity = 50))) |>
 add_object(sphere(y=5,x=-5,z=5,material=light(color="orange",intensity = 50)))
render_scene(scene, fov=40,sample_method="sobol_blue")

#Now, let's fly through a series of points. You can pass arguments to `render_scene()` via `...`
#This function doesn't return anything, but saves the scene with the rollercoaster and the
#motion information internally.
generate_rayrender_coaster(scene, fov = 120)

#We now can create our animation using `animate_rollercoaster()`. This extracts the information
#(scene and motion) in the previous step. If no filename is given,
#it will simply preview the animation in the interactive screen, without saving anything.
#Set samples to `1` to render a quick preview.
animate_rollercoaster(samples=1, width=200,height=200)

#Increase the number of samples and resolution for a high quality animation (but longer render):
animate_rollercoaster(samples=128, width=800, height=800)

#Set the FOV to 360 to render a movie for VR headsets
animate_rollercoaster(samples=128, width=800, height=800, filename="video360.mp4")

#Alternatively, get the scene and motion data yourself and call `rayrender::render_animation()`
#directly.
scene = get_rayrender_scene()
motion = get_rayrender_motion()

render_animation(scene, motion, samples=1, sample_method="sobol_blue")
}
}
